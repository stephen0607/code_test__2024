package com.example.code_test.model

import com.google.gson.annotations.SerializedName

data class Repo(
    val id: Long,
    @SerializedName("node_id") val nodeId: String,
    val name: String,
    @SerializedName("full_name") val fullName: String,
    val private: Boolean,
    val owner: OwnerInfo,
    @SerializedName("html_url") val htmlUrl: String,
    val description: String?,
    val fork: Boolean,
    val url: String,
    @SerializedName("forks_url") val forksUrl: String,
    @SerializedName("keys_url") val keysUrl: String,
    @SerializedName("collaborators_url") val collaboratorsUrl: String,
    @SerializedName("teams_url") val teamsUrl: String,
    @SerializedName("hooks_url") val hooksUrl: String,
    @SerializedName("issue_events_url") val issueEventsUrl: String,
    @SerializedName("events_url") val eventsUrl: String,
    @SerializedName("assignees_url") val assigneesUrl: String,
    @SerializedName("branches_url") val branchesUrl: String,
    @SerializedName("tags_url") val tagsUrl: String,
    @SerializedName("blobs_url") val blobsUrl: String,
    @SerializedName("git_tags_url") val gitTagsUrl: String,
    @SerializedName("git_refs_url") val gitRefsUrl: String,
    @SerializedName("trees_url") val treesUrl: String,
    @SerializedName("statuses_url") val statusesUrl: String,
    @SerializedName("languages_url") val languagesUrl: String,
    @SerializedName("stargazers_url") val stargazersUrl: String,
    @SerializedName("contributors_url") val contributorsUrl: String,
    @SerializedName("subscribers_url") val subscribersUrl: String,
    @SerializedName("subscription_url") val subscriptionUrl: String,
    @SerializedName("commits_url") val commitsUrl: String,
    @SerializedName("git_commits_url") val gitCommitsUrl: String,
    @SerializedName("comments_url") val commentsUrl: String,
    @SerializedName("issue_comment_url") val issueCommentUrl: String,
    @SerializedName("contents_url") val contentsUrl: String,
    @SerializedName("compare_url") val compareUrl: String,
    @SerializedName("merges_url") val mergesUrl: String,
    @SerializedName("archive_url") val archiveUrl: String,
    @SerializedName("downloads_url") val downloadsUrl: String,
    @SerializedName("issues_url") val issuesUrl: String,
    @SerializedName("pulls_url") val pullsUrl: String,
    @SerializedName("milestones_url") val milestonesUrl: String,
    @SerializedName("notifications_url") val notificationsUrl: String,
    @SerializedName("labels_url") val labelsUrl: String,
    @SerializedName("releases_url") val releasesUrl: String,
    @SerializedName("deployments_url") val deploymentsUrl: String,
    @SerializedName("created_at") val createdAt: String,
    @SerializedName("updated_at") val updatedAt: String,
    @SerializedName("pushed_at") val pushedAt: String,
    @SerializedName("git_url") val gitUrl: String,
    @SerializedName("ssh_url") val sshUrl: String,
    @SerializedName("clone_url") val cloneUrl: String,
    @SerializedName("svn_url") val svnUrl: String,
    val homepage: String?,
    val size: Int,
    @SerializedName("stargazers_count") val stargazersCount: Int,
    @SerializedName("watchers_count") val watchersCount: Int,
    val language: String?,
    @SerializedName("has_issues") val hasIssues: Boolean,
    @SerializedName("has_projects") val hasProjects: Boolean,
    @SerializedName("has_downloads") val hasDownloads: Boolean,
    @SerializedName("has_wiki") val hasWiki: Boolean,
    @SerializedName("has_pages") val hasPages: Boolean,
    @SerializedName("has_discussions") val hasDiscussions: Boolean,
    @SerializedName("forks_count") val forksCount: Int,
    val archived: Boolean,
    val disabled: Boolean,
    @SerializedName("open_issues_count") val openIssuesCount: Int,
//    val license: String?,
    @SerializedName("allow_forking") val allowForking: Boolean,
    @SerializedName("is_template") val isTemplate: Boolean,
    @SerializedName("web_commit_signoff_required") val webCommitSignoffRequired: Boolean,
    val topics: List<String>,
    val visibility: String,
    val forks: Int,
    @SerializedName("open_issues") val openIssues: Int,
    val watchers: Int,
    @SerializedName("default_branch") val defaultBranch: String
) {
    data class OwnerInfo(
        val login: String,
        val id: Long,
        @SerializedName("node_id") val nodeId: String,
        @SerializedName("avatar_url") val avatarUrl: String,
        @SerializedName("gravatar_id") val gravatarId: String?,
        val url: String,
        @SerializedName("html_url") val htmlUrl: String,
        @SerializedName("followers_url") val followersUrl: String,
        @SerializedName("following_url") val followingUrl: String,
        @SerializedName("gists_url") val gistsUrl: String,
        @SerializedName("starred_url") val starredUrl: String,
        @SerializedName("subscriptions_url") val subscriptionsUrl: String,
        @SerializedName("organizations_url") val organizationsUrl: String,
        @SerializedName("repos_url") val reposUrl: String,
        @SerializedName("events_url") val eventsUrl: String,
        @SerializedName("received_events_url") val receivedEventsUrl: String,
        val type: String,
        @SerializedName("site_admin") val siteAdmin: Boolean
    )
}

fun getDummyRepositoryInfo(): Repo {
    return Repo(
        id = 132935648,
        nodeId = "MDEwOlJlcG9zaXRvcnkxMzI5MzU2NDg=",
        name = "boysenberry-repo-1",
        fullName = "octocat/boysenberry-repo-1",
        private = false,
        owner = Repo.OwnerInfo(
            login = "octocat",
            id = 583231,
            nodeId = "MDQ6VXNlcjU4MzIzMQ==",
            avatarUrl = "https://avatars.githubusercontent.com/u/583231?v=4",
            gravatarId = "",
            url = "https://api.github.com/users/octocat",
            htmlUrl = "https://github.com/octocat",
            followersUrl = "https://api.github.com/users/octocat/followers",
            followingUrl = "https://api.github.com/users/octocat/following{/other_user}",
            gistsUrl = "https://api.github.com/users/octocat/gists{/gist_id}",
            starredUrl = "https://api.github.com/users/octocat/starred{/owner}{/repo}",
            subscriptionsUrl = "https://api.github.com/users/octocat/subscriptions",
            organizationsUrl = "https://api.github.com/users/octocat/orgs",
            reposUrl = "https://api.github.com/users/octocat/repos",
            eventsUrl = "https://api.github.com/users/octocat/events{/privacy}",
            receivedEventsUrl = "https://api.github.com/users/octocat/received_events",
            type = "User",
            siteAdmin = false
        ),
        htmlUrl = "https://github.com/octocat/boysenberry-repo-1",
        description = "Testing",
        fork = true,
        url = "https://api.github.com/repos/octocat/boysenberry-repo-1",
        forksUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/forks",
        keysUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/keys{/key_id}",
        collaboratorsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/collaborators{/collaborator}",
        teamsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/teams",
        hooksUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/hooks",
        issueEventsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/issues/events{/number}",
        eventsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/events",
        assigneesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/assignees{/user}",
        branchesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/branches{/branch}",
        tagsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/tags",
        blobsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/git/blobs{/sha}",
        gitTagsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/git/tags{/sha}",
        gitRefsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/git/refs{/sha}",
        treesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/git/trees{/sha}",
        statusesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/statuses/{sha}",
        languagesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/languages",
        stargazersUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/stargazers",
        contributorsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/contributors",
        subscribersUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/subscribers",
        subscriptionUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/subscription",
        commitsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/commits{/sha}",
        gitCommitsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/git/commits{/sha}",
        commentsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/comments{/number}",
        issueCommentUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/issues/comments{/number}",
        contentsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/contents/{+path}",
        compareUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/compare/{base}...{head}",
        mergesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/merges",
        archiveUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/{archive_format}{/ref}",
        downloadsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/downloads",
        issuesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/issues{/number}",
        pullsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/pulls{/number}",
        milestonesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/milestones{/number}",
        notificationsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/notifications{?since,all,participating}",
        labelsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/labels{/name}",
        releasesUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/releases{/id}",
        deploymentsUrl = "https://api.github.com/repos/octocat/boysenberry-repo-1/deployments",
        createdAt = "2018-05-10T17:51:29Z",
        updatedAt = "2024-08-30T20:03:54Z",
        pushedAt = "2024-05-26T07:02:05Z",
        gitUrl = "git://github.com/octocat/boysenberry-repo-1.git",
        sshUrl = "git@github.com:octocat/boysenberry-repo-1.git",
        cloneUrl = "https://github.com/octocat/boysenberry-repo-1.git",
        svnUrl = "https://github.com/octocat/boysenberry-repo-1",
        homepage = null,
        size = 4,
        stargazersCount = 262,
        watchersCount = 262,
        language = null,
        hasIssues = false,
        hasProjects = true,
        hasDownloads = true,
        hasWiki = true,
        hasPages = false,
        hasDiscussions = false,
        forksCount = 15,
        archived = false,
        disabled = false,
        openIssuesCount = 1,
        allowForking = true,
        isTemplate = false,
        webCommitSignoffRequired = false,
        topics = emptyList(),
        visibility = "public",
        forks = 15,
        openIssues = 1,
        watchers = 262,
        defaultBranch = "master"
    )
}

